# Generated by Django 2.0.2 on 2018-02-26 13:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.query_utils
import django.utils.timezone
import model_utils.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('mobile', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='موبایل')),
                ('mobile_verified', models.BooleanField(default=False, verbose_name='موبایل تأیید شده')),
                ('email_verified', models.BooleanField(default=False, verbose_name='پست الکترونیکی تأیید شده')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ACItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('ac_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'اسپلیت'), (2, 'پنجره\u200cای')], null=True, verbose_name='نوع کولر گازی')),
                ('service_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب و راه\u200cاندازی'), (2, 'تعمیر'), (3, 'سرویس')], null=True, verbose_name='نوع سرویس')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'انجام نشده'), (2, 'در حال انجام'), (3, 'انجام شده'), (4, 'لفو شده توسط مشتری'), (5, 'لفو شده توسط سرویس\u200cدهنده')], default=1, null=True, verbose_name='وضعیت')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
            ],
            options={
                'verbose_name_plural': 'آیتم\u200cهای کولر گازی\u200cها',
                'verbose_name': 'آیتم کولر گازی',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(blank=True, max_length=80, null=True, verbose_name='عنوان')),
                ('link', models.CharField(blank=True, max_length=80, null=True, verbose_name='لینک')),
                ('image', models.ImageField(blank=True, max_length=80, null=True, upload_to='static/uploads/images/announcements', verbose_name='تصویر')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ انقضاء')),
            ],
            options={
                'verbose_name_plural': 'اعلان\u200cها',
                'verbose_name': 'اعلان',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BaseService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('ref_num', models.CharField(blank=True, max_length=20, null=True, verbose_name='شماره پیگیری')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'انجام نشده'), (2, 'در حال انجام'), (3, 'انجام شده'), (4, 'لفو شده توسط مشتری'), (5, 'لفو شده توسط سرویس\u200cدهنده')], default=1, null=True, verbose_name='وضعیت')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('schedule_time', models.DateTimeField(blank=True, null=True, verbose_name='زمان ارائه خدمت')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='آدرس ارائه خدمت')),
            ],
            options={
                'verbose_name_plural': 'سفارش\u200cها',
                'verbose_name': 'سفارش',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CarpetCleaningItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'شستشو'), (2, 'لکه\u200cگیری'), (3, 'رفوگری')], null=True, verbose_name='نوع')),
                ('size', models.CharField(blank=True, max_length=15, null=True, verbose_name='ابعاد')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'انجام نشده'), (2, 'در حال انجام'), (3, 'انجام شده'), (4, 'لفو شده توسط مشتری'), (5, 'لفو شده توسط سرویس\u200cدهنده')], null=True, verbose_name='وضعیت')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
            ],
            options={
                'verbose_name_plural': 'آیتم\u200cهای قالی\u200cشویی',
                'verbose_name': 'آيتم قالی\u200cشویی',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='MedicalSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ جلسه')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'انجام نشده'), (2, 'در حال انجام'), (3, 'انجام شده'), (4, 'لفو شده توسط مشتری'), (5, 'لفو شده توسط سرویس\u200cدهنده')], null=True, verbose_name='وضعیت')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
            ],
            options={
                'verbose_name_plural': 'وقت\u200cهای پزشکی',
                'verbose_name': 'وقت پزشکی',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(blank=True, max_length=40, null=True, unique=True, verbose_name='عنوان')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='تعرفه')),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True, unique=True, verbose_name='جایگاه')),
                ('active_days', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'شنبه'), (2, 'یکشنبه'), (3, 'دوشنبه'), (4, 'سه\u200cشنبه'), (5, 'چهارشنبه'), (6, 'پنجشنبه'), (7, 'جمعه')], help_text='این خدمت در چه روزهایی از هفته فعال است؟ برای انتخاب همه روزهای هفته می\u200cتوانید هیچکدام را انتخاب نکنید.', max_length=6, null=True, verbose_name='رورهای فعال')),
                ('content_type', models.OneToOneField(blank=True, limit_choices_to=django.db.models.query_utils.Q(django.db.models.query_utils.Q(('model', 'DryCleaning'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'CarpetCleaning'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'AC'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Medical'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Towing'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'HomeAppliance'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Plumbing'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Electricity'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Tuition'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Truck'), ('app_label', 'service_delivery'), _connector='AND'), django.db.models.query_utils.Q(('model', 'Cleaning'), ('app_label', 'service_delivery'), _connector='AND'), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': 'جزئیات خدمت\u200cها',
                'verbose_name': 'جزئیات خدمت',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='AC',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('split_install', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد نصب اسپلیت')),
                ('split_repair', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد تعمیر اسپلیت')),
                ('split_service', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد سرویس اسپلیت')),
                ('window_install', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد نصب پنجره\u200cای')),
                ('window_repair', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد تعمیر پنجره\u200cای')),
                ('window_service', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد سرویس پنجره\u200cای')),
            ],
            options={
                'verbose_name_plural': 'کولر گازی\u200cها',
                'verbose_name': 'کولر گازی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='CarpetCleaning',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('wash', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='شستشو')),
                ('stain', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='لکه\u200cگیری')),
                ('patch', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='رفوگری')),
            ],
            options={
                'verbose_name_plural': 'قالی\u200cشویی\u200cها',
                'verbose_name': 'قالی\u200cشویی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('building_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'منزل'), (2, 'اداری تجاری'), (3, 'مشاعات')], null=True, verbose_name='نوع مکان')),
                ('hour', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='مقدار ساعت')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'مرد'), (2, 'زن')], null=True, verbose_name='جنسیت نیرو')),
            ],
            options={
                'verbose_name_plural': 'نظافت\u200cها',
                'verbose_name': 'نظافت',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='DryCleaning',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('suit', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='کت و شلوار')),
                ('shirt', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='پیراهن')),
                ('manteau', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='مانتو')),
                ('blanket', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='پتو')),
                ('curtain', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='پرده')),
            ],
            options={
                'verbose_name_plural': 'خشکشویی\u200cها',
                'verbose_name': 'خشکشویی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('wiring', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'روکار'), (2, 'توکار')], null=True, verbose_name='سیم\u200cکشی')),
                ('switch_and_socket', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'روکار'), (2, 'توکار')], null=True, verbose_name='کلید و پریز')),
                ('lighting', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب و تعویض لوستر'), (2, 'اجرای نور مخفی'), (3, 'نصب و تعویض چراغ')], null=True, verbose_name='روشنایی')),
                ('fuse_box', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب')], null=True, verbose_name='جعبه فیوز')),
                ('earth_wiring', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب')], null=True, verbose_name='سیم\u200cکشی ارث')),
                ('phone_and_central_wiring', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'سیم\u200cکشی جدید'), (2, 'رفع عیب'), (3, 'خدمات سانترال')], null=True, verbose_name='سیم\u200cکشی تلفن و سانترال')),
                ('ventilation', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب')], null=True, verbose_name='هواکش')),
                ('ventilation_and_common_spaces', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب'), (3, 'طراحی')], null=True, verbose_name='هواکش و مشاعات')),
                ('central_antenna', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب')], null=True, verbose_name='آنتن مرکزی')),
                ('video_intercom', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'رفع عیب')], null=True, verbose_name='آیفون تصویری')),
            ],
            options={
                'verbose_name_plural': 'برق\u200cکاری\u200cها',
                'verbose_name': 'برق\u200cکاری',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='HomeAppliance',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('service_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب و راه\u200cاندازی'), (2, 'تعمیر'), (3, 'سرویس')], null=True, verbose_name='نوع سرویس')),
                ('brand', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'سامسونگ - Samsung'), (2, 'ال\u200cجی - LG'), (3, 'بوش - Bosch'), (4, 'امرسان - Emersun'), (5, 'اسنوا - Snowa'), (6, 'سینجر - Singer'), (7, 'میدیا - Midea'), (8, 'دوو - Daewoo')], null=True, verbose_name='برند')),
                ('home_appliance_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'یخچال'), (2, 'فریزر'), (3, 'ساید بای ساید'), (4, 'تلویزیون'), (5, 'جاروبرقی'), (6, 'ماشین لباس\u200cشویی'), (7, 'ماشین ظرف\u200cشویی'), (8, 'اجاق\u200cگاز'), (9, 'اجاق مایکرویو')], null=True, verbose_name='نوع لوازم خانگی')),
            ],
            options={
                'verbose_name_plural': 'لوازم خانگی',
                'verbose_name': 'لوازم خانگی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Medical',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('medic_gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'مرد'), (2, 'زن')], null=True, verbose_name='جنسیت پزشک')),
                ('num_sessions', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد جلسات')),
            ],
            options={
                'verbose_name_plural': 'پزشکی\u200cها',
                'verbose_name': 'پزشکی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'خشک\u200cشویی'), (2, 'قالی\u200cشویی'), (3, 'کولر گازی'), (4, 'پزشکی'), (5, 'امداد خودرو - نیسان یدک\u200cکش'), (6, 'امداد خودرو - جرثقیل'), (7, 'یخچال'), (8, 'لوله\u200cکشی'), (9, 'برق\u200cکاری'), (10, 'تدریس'), (11, 'نظافت')], null=True, verbose_name='نوع پرسنل')),
            ],
            options={
                'verbose_name_plural': 'پرسنل',
                'verbose_name': 'پرسنل',
                'ordering': ('-created',),
            },
            bases=('service_delivery.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plumbing',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('water_and_sewage', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب روکار'), (2, 'نصب توکار'), (3, 'رفع ترکیدگی روکار'), (4, 'رفع ترکیدگی توکار')], null=True, verbose_name='آب و فاضلاب')),
                ('water_heater', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='آبگرمکن')),
                ('squat_toilet', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='توالت ایرانی')),
                ('flush_toilet', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='توالت فرنگی')),
                ('flushing_system', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='فلاش تانک')),
                ('faucets', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='شیر\u200cآلات')),
                ('bathroom_sink', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='روشویی')),
                ('kitchen_sink', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='سینک ظرقشویی')),
                ('bath_tub', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='وان حمام')),
                ('water_pump', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'نصب'), (2, 'تعمیر')], null=True, verbose_name='پمپ آب')),
            ],
            options={
                'verbose_name_plural': 'لوله\u200cکشی\u200cها',
                'verbose_name': 'لوله\u200cکشی',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('truck_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'وانت\u200cبار'), (2, 'نیسان\u200cبار'), (3, 'کامبونت سر باز'), (4, 'کامیونت چادری')], null=True, verbose_name='نوع اتوبار')),
                ('num_worker', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد کارگران')),
            ],
            options={
                'verbose_name_plural': 'اتوبارها',
                'verbose_name': 'اتوبار',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.CreateModel(
            name='Tuition',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_delivery.BaseService')),
                ('grade', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'اول'), (2, 'دوم'), (3, 'سوم')], null=True, verbose_name='مقطع تحصیلی')),
                ('lesson_name', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'ریاضی'), (2, 'فیزیک'), (3, 'زیست\u200cشناسی'), (4, 'زمین\u200cشناسی'), (5, 'زبان انگلیسی'), (6, 'عربی'), (7, 'ادبیات')], null=True, verbose_name='اسم درس')),
                ('tutor_gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'مرد'), (2, 'زن'), (3, 'فرقی نمی\u200cکند')], null=True, verbose_name='جنسیت استاد')),
                ('student_gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'پسر'), (2, 'دختر')], null=True, verbose_name='جنسیت دانش\u200cآموز')),
                ('num_sessions', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد جلسات')),
            ],
            options={
                'verbose_name_plural': 'تدریس\u200cها',
                'verbose_name': 'تدریس',
                'ordering': ('-created',),
            },
            bases=('service_delivery.baseservice',),
        ),
        migrations.AddField(
            model_name='baseservice',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='مشتری'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='medicalsession',
            name='medical_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service_delivery.Medical', verbose_name='شیء پزشکی'),
        ),
        migrations.AddField(
            model_name='carpetcleaningitem',
            name='carpet_cleaning_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service_delivery.CarpetCleaning', verbose_name='شیء قالی\u200cشویی'),
        ),
        migrations.AddField(
            model_name='baseservice',
            name='personnel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnel', to='service_delivery.Personnel', verbose_name='پرسنل'),
        ),
        migrations.AddField(
            model_name='acitem',
            name='ac_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='service_delivery.AC', verbose_name='شیء کولر گازی'),
        ),
    ]
